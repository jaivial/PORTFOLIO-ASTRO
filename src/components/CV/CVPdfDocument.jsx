import React from "react";
import { Document, Page, Text, View, StyleSheet, Image, Font, Svg, Path, Rect, Link, Circle } from "@react-pdf/renderer";
import { getTranslationFunction } from "../../utils/translations";

// Register standard PDF fonts that are always available
Font.registerHyphenationCallback((word) => [word]);

// Register the standard PDF fonts that are guaranteed to work
Font.register({ family: "Courier" });
Font.register({ family: "Helvetica" });
Font.register({ family: "Times" });

// Try to register custom web fonts (these may fail on some systems)
try {
  Font.register({
    family: "Manrope",
    src: "https://fonts.cdnfonts.com/s/29129/Manrope-Regular.woff",
  });

  Font.register({
    family: "Roboto",
    src: "https://fonts.cdnfonts.com/s/13528/Roboto-Regular.woff",
  });
} catch (error) {
  console.warn("Custom font registration error:", error);
}

// SVG Icon Components for react-pdf
const EmailIcon = () => (
  <Svg width="12" height="12" viewBox="0 0 24 24" style={{ marginBottom: 5, marginRight: 3 }}>
    <Path d="M4 7.00005L10.2 11.65C11.2667 12.45 12.7333 12.45 13.8 11.65L20 7" stroke="#4b5563" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
    <Rect x="3" y="5" width="18" height="14" rx="2" stroke="#4b5563" strokeWidth="2" strokeLinecap="round" />
  </Svg>
);

const PhoneIcon = () => (
  <Svg width="12" height="12" viewBox="0 0 24 24" style={{ marginBottom: 5, marginRight: 3 }}>
    <Path
      d="M16.5562 12.9062L16.1007 13.359C16.1007 13.359 15.0181 14.4355 12.0631 11.4972C9.10812 8.55901 10.1907 7.48257 10.1907 7.48257L10.4775 7.19738C11.1841 6.49484 11.2507 5.36691 10.6342 4.54348L9.37326 2.85908C8.61028 1.83992 7.13596 1.70529 6.26145 2.57483L4.69185 4.13552C4.25823 4.56668 3.96765 5.12559 4.00289 5.74561C4.09304 7.33182 4.81071 10.7447 8.81536 14.7266C13.0621 18.9492 17.0468 19.117 18.6763 18.9651C19.1917 18.9171 19.6399 18.6546 20.0011 18.2954L21.4217 16.883C22.3806 15.9295 22.1102 14.2949 20.8833 13.628L18.9728 12.5894C18.1672 12.1515 17.1858 12.2801 16.5562 12.9062Z"
      fill="#4b5563"
    />
  </Svg>
);

const LocationIcon = () => (
  <Svg width="12" height="12" viewBox="0 0 24 24" style={{ marginBottom: 5, marginRight: 3 }}>
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.2848 18.9935C12.1567 19.0875 12.0373 19.1728 11.9282 19.2493C11.8118 19.1721 11.6827 19.0833 11.5427 18.9832C10.8826 18.5109 10.0265 17.8176 9.18338 16.9529C7.45402 15.1792 6 12.9151 6 10.5C6 7.18629 8.68629 4.5 12 4.5C15.3137 4.5 18 7.18629 18 10.5C18 12.8892 16.4819 15.1468 14.6893 16.9393C13.8196 17.8091 12.9444 18.5099 12.2848 18.9935ZM19.5 10.5C19.5 16.5 12 21 12 21C11.625 21 4.5 16.5 4.5 10.5C4.5 6.35786 7.85786 3 12 3C16.1421 3 19.5 6.35786 19.5 10.5ZM13.5 10.5C13.5 11.3284 12.8284 12 12 12C11.1716 12 10.5 11.3284 10.5 10.5C10.5 9.67157 11.1716 9 12 9C12.8284 9 13.5 9.67157 13.5 10.5ZM15 10.5C15 12.1569 13.6569 13.5 12 13.5C10.3431 13.5 9 12.1569 9 10.5C9 8.84315 10.3431 7.5 12 7.5C13.6569 7.5 15 8.84315 15 10.5Z"
      fill="#1f2937"
    />
  </Svg>
);

const WebsiteIcon = () => (
  <Svg width="12" height="12" viewBox="0 0 512 512" style={{ marginBottom: 5, marginRight: 3 }}>
    <Path
      d="M256,0C114.615,0,0,114.615,0,256s114.615,256,256,256s256-114.615,256-256S397.385,0,256,0z M418.275,146h-46.667  c-5.365-22.513-12.324-43.213-20.587-61.514c15.786,8.776,30.449,19.797,43.572,32.921C403.463,126.277,411.367,135.854,418.275,146  z M452,256c0,17.108-2.191,33.877-6.414,50h-64.034c1.601-16.172,2.448-32.887,2.448-50s-0.847-33.828-2.448-50h64.034  C449.809,222.123,452,238.892,452,256z M256,452c-5.2,0-21.048-10.221-36.844-41.813c-6.543-13.087-12.158-27.994-16.752-44.187  h107.191c-4.594,16.192-10.208,31.1-16.752,44.187C277.048,441.779,261.2,452,256,452z M190.813,306  c-1.847-16.247-2.813-33.029-2.813-50s0.966-33.753,2.813-50h130.374c1.847,16.247,2.813,33.029,2.813,50s-0.966,33.753-2.813,50  H190.813z M60,256c0-17.108,2.191-33.877,6.414-50h64.034c-1.601,16.172-2.448,32.887-2.448,50s0.847,33.828,2.448,50H66.414  C62.191,289.877,60,273.108,60,256z M256,60c5.2,0,21.048,10.221,36.844,41.813c6.543,13.087,12.158,27.994,16.752,44.187H202.404  c4.594-16.192,10.208-31.1,16.752-44.187C234.952,70.221,250.8,60,256,60z M160.979,84.486c-8.264,18.301-15.222,39-20.587,61.514  H93.725c6.909-10.146,14.812-19.723,23.682-28.593C130.531,104.283,145.193,93.262,160.979,84.486z M93.725,366h46.667  c5.365,22.513,12.324,43.213,20.587,61.514c-15.786-8.776-30.449-19.797-43.572-32.921C108.537,385.723,100.633,376.146,93.725,366z   M351.021,427.514c8.264-18.301,15.222-39,20.587-61.514h46.667c-6.909,10.146-14.812,19.723-23.682,28.593  C381.469,407.717,366.807,418.738,351.021,427.514z"
      fill="#4b5563"
    />
  </Svg>
);

const LocationIconSmall = () => (
  <Svg width="12" height="12" viewBox="0 0 24 24" style={styles.locationIconSmall}>
    <Path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.2848 18.9935C12.1567 19.0875 12.0373 19.1728 11.9282 19.2493C11.8118 19.1721 11.6827 19.0833 11.5427 18.9832C10.8826 18.5109 10.0265 17.8176 9.18338 16.9529C7.45402 15.1792 6 12.9151 6 10.5C6 7.18629 8.68629 4.5 12 4.5C15.3137 4.5 18 7.18629 18 10.5C18 12.8892 16.4819 15.1468 14.6893 16.9393C13.8196 17.8091 12.9444 18.5099 12.2848 18.9935ZM19.5 10.5C19.5 16.5 12 21 12 21C11.625 21 4.5 16.5 4.5 10.5C4.5 6.35786 7.85786 3 12 3C16.1421 3 19.5 6.35786 19.5 10.5ZM13.5 10.5C13.5 11.3284 12.8284 12 12 12C11.1716 12 10.5 11.3284 10.5 10.5C10.5 9.67157 11.1716 9 12 9C12.8284 9 13.5 9.67157 13.5 10.5ZM15 10.5C15 12.1569 13.6569 13.5 12 13.5C10.3431 13.5 9 12.1569 9 10.5C9 8.84315 10.3431 7.5 12 7.5C13.6569 7.5 15 8.84315 15 10.5Z"
      fill="#1f2937"
    />
  </Svg>
);

const EnglishFlag = () => (
  <Svg width="16" height="12" viewBox="0 0 36 36" style={{ marginRight: 4, marginBottom: 2 }}>
    <Path fill="#00247D" d="M0 9.059V13h5.628zM4.664 31H13v-5.837zM23 25.164V31h8.335zM0 23v3.941L5.63 23zM31.337 5H23v5.837zM36 26.942V23h-5.631zM36 13V9.059L30.371 13zM13 5H4.664L13 10.837z" />
    <Path fill="#CF1B2B" d="M25.14 23l9.712 6.801a3.977 3.977 0 0 0 .99-1.749L28.627 23H25.14zM13 23h-2.141l-9.711 6.8c.521.53 1.189.909 1.938 1.085L13 23.943V23zm10-10h2.141l9.711-6.8a3.988 3.988 0 0 0-1.937-1.085L23 12.057V13zm-12.141 0L1.148 6.2a3.994 3.994 0 0 0-.991 1.749L7.372 13h3.487z" />
    <Path fill="#EEE" d="M36 21H21v10h2v-5.836L31.335 31H32a3.99 3.99 0 0 0 2.852-1.199L25.14 23h3.487l7.215 5.052c.093-.337.158-.686.158-1.052v-.058L30.369 23H36v-2zM0 21v2h5.63L0 26.941V27c0 1.091.439 2.078 1.148 2.8l9.711-6.8H13v.943l-9.914 6.941c.294.07.598.116.914.116h.664L13 25.163V31h2V21H0zM36 9a3.983 3.983 0 0 0-1.148-2.8L25.141 13H23v-.943l9.915-6.942A4.001 4.001 0 0 0 32 5h-.663L23 10.837V5h-2v10h15v-2h-5.629L36 9.059V9zM13 5v5.837L4.664 5H4a3.985 3.985 0 0 0-2.852 1.2l9.711 6.8H7.372L.157 7.949A3.968 3.968 0 0 0 0 9v.059L5.628 13H0v2h15V5h-2z" />
    <Path fill="#CF1B2B" d="M21 15V5h-6v10H0v6h15v10h6V21h15v-6z" />
  </Svg>
);

const SpanishFlag = () => (
  <Svg width="16" height="12" viewBox="0 0 36 36" style={{ marginRight: 4, marginBottom: 2 }}>
    <Path fill="#C60A1D" d="M36 27a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V9a4 4 0 0 1 4-4h28a4 4 0 0 1 4 4v18z" />
    <Path fill="#FFC400" d="M0 12h36v12H0z" />
    <Path fill="#EA596E" d="M9 17v3a3 3 0 1 0 6 0v-3H9z" />
    <Path fill="#F4A2B2" d="M12 16h3v3h-3z" />
    <Path fill="#DD2E44" d="M9 16h3v3H9z" />
    <Path fill="#EA596E" cx="12" cy="14.5" rx="3" ry="1.5" />
    <Path fill="#FFAC33" cx="12" cy="13.75" rx="3" ry=".75" />
    <Path fill="#99AAB5" d="M7 16h1v7H7zm9 0h1v7h-1z" />
    <Path fill="#66757F" d="M6 22h3v1H6zm9 0h3v1h-3zm-8-7h1v1H7zm9 0h1v1h-1z" />
  </Svg>
);

// Technology Icon Components
const ReactIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 24 24" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M12 9.861A2.139 2.139 0 1 0 12 14.139 2.139 2.139 0 1 0 12 9.861zM6.008 16.255l-.472-.12C2.018 15.246 0 13.737 0 11.996s2.018-3.25 5.536-4.139l.472-.119.133.468a23.53 23.53 0 0 0 1.363 3.578l.101.213-.101.213a23.307 23.307 0 0 0-1.363 3.578l-.133.467zM5.317 8.95c-2.674.751-4.315 1.9-4.315 3.046 0 1.145 1.641 2.294 4.315 3.046a24.95 24.95 0 0 1 1.182-3.046A24.752 24.752 0 0 1 5.317 8.95zM17.992 16.255l-.133-.469a23.357 23.357 0 0 0-1.364-3.577l-.101-.213.101-.213a23.42 23.42 0 0 0 1.364-3.578l.133-.468.473.119c3.517.889 5.535 2.398 5.535 4.14s-2.018 3.25-5.535 4.139l-.473.12zm-.491-4.259c.48 1.039.877 2.06 1.182 3.046 2.675-.752 4.315-1.901 4.315-3.046 0-1.146-1.641-2.294-4.315-3.046a24.788 24.788 0 0 1-1.182 3.046zM5.31 8.945l-.133-.467C4.188 4.992 4.488 2.494 6 1.622c1.483-.856 3.864.155 6.359 2.716l.34.349-.34.349a23.552 23.552 0 0 0-2.422 2.967l-.135.193-.235.02a23.657 23.657 0 0 0-3.785.61l-.472.119zm1.896-6.63c-.268 0-.505.058-.705.173-.994.573-1.17 2.565-.485 5.253a25.122 25.122 0 0 1 3.233-.501 24.847 24.847 0 0 1 2.052-2.544c-1.56-1.519-3.037-2.381-4.095-2.381zM16.795 22.677c-.001 0-.001 0 0 0-1.425 0-3.255-1.073-5.154-3.023l-.34-.349.34-.349a23.53 23.53 0 0 0 2.421-2.968l.135-.193.234-.02a23.63 23.63 0 0 0 3.787-.609l.472-.119.134.468c.987 3.484.688 5.983-.824 6.854a2.38 2.38 0 0 1-1.205.308zm-4.096-3.381c1.56 1.519 3.037 2.381 4.095 2.381h.001c.267 0 .505-.058.704-.173.994-.573 1.171-2.566.485-5.254a25.02 25.02 0 0 1-3.234.501 24.674 24.674 0 0 1-2.051 2.545zM18.69 8.945l-.472-.119a23.479 23.479 0 0 0-3.787-.61l-.234-.02-.135-.193a23.414 23.414 0 0 0-2.421-2.967l-.34-.349.34-.349C14.135 1.778 16.515.767 18 1.622c1.512.872 1.812 3.37.824 6.855l-.134.468zM14.75 7.24c1.142.104 2.227.273 3.234.501.686-2.688.509-4.68-.485-5.253-.988-.571-2.845.304-4.8 2.208A24.849 24.849 0 0 1 14.75 7.24zM7.206 22.677A2.38 2.38 0 0 1 6 22.369c-1.512-.871-1.812-3.369-.823-6.854l.132-.468.472.119c1.155.291 2.429.496 3.785.609l.235.02.134.193a23.596 23.596 0 0 0 2.422 2.968l.34.349-.34.349c-1.898 1.95-3.728 3.023-5.151 3.023zm-1.19-6.427c-.686 2.688-.509 4.681.485 5.254.987.563 2.843-.305 4.8-2.208a24.998 24.998 0 0 1-2.052-2.545 24.976 24.976 0 0 1-3.233-.501zM12 16.878c-.823 0-1.669-.036-2.516-.106l-.235-.02-.135-.193a30.388 30.388 0 0 1-1.35-2.122 30.354 30.354 0 0 1-1.166-2.228l-.1-.213.1-.213a30.3 30.3 0 0 1 1.166-2.228c.414-.716.869-1.43 1.35-2.122l.135-.193.235-.02a29.785 29.785 0 0 1 5.033 0l.234.02.134.193a30.006 30.006 0 0 1 2.517 4.35l.101.213-.101.213a29.6 29.6 0 0 1-2.517 4.35l-.134.193-.234.02c-.847.07-1.694.106-2.517.106zm-2.197-1.084c1.48.111 2.914.111 4.395 0a29.006 29.006 0 0 0 2.196-3.798 28.585 28.585 0 0 0-2.197-3.798 29.031 29.031 0 0 0-4.394 0 28.477 28.477 0 0 0-2.197 3.798 29.114 29.114 0 0 0 2.197 3.798z" fill="#61DAFB" />
  </Svg>
);

const JavaScriptIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 512 512" style={{ marginRight: 4, marginBottom: 1 }}>
    <Rect width="512" height="512" rx="15%" fill="#f7df1e" />
    <Path d="M324 370c10 17 24 29 47 29c20 0 33-10 33 -24c0-16 -13 -22 -35 -32l-12-5c-35-15 -58 -33 -58 -72c0-36 27 -64 70 -64c31 0 53 11 68 39l-37 24c-8-15 -17 -21 -31 -21c-14 0-23 9 -23 21c0 14 9 20 30 29l12 5c41 18 64 35 64 76c0 43-34 67 -80 67c-45 0-74 -21 -88 -49zm-170 4c8 13 14 25 31 25c16 0 26-6 26 -30V203h48v164c0 50-29 72 -72 72c-39 0-61 -20 -72 -44z" fill="#323330" />
  </Svg>
);

const TypeScriptIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 512 512" style={{ marginRight: 4, marginBottom: 1 }}>
    <Rect width="512" height="512" rx="15%" fill="#3178c6" />
    <Path fill="#ffffff" d="m233 284h64v-41H118v41h64v183h51zm84 173c8.1 4.2 18 7.3 29 9.4s23 3.1 35 3.1c12 0 23-1.1 34-3.4c11-2.3 20-6.1 28-11c8.1-5.3 15-12 19-21s7.1-19 7.1-32c0-9.1-1.4-17-4.1-24s-6.6-13-12-18c-5.1-5.3-11-10-18-14s-15-8.2-24-12c-6.6-2.7-12-5.3-18-7.9c-5.2-2.6-9.7-5.2-13-7.8c-3.7-2.7-6.5-5.5-8.5-8.4c-2-3-3-6.3-3-10c0-3.4.89-6.5 2.7-9.3s4.3-5.1 7.5-7.1c3.2-2 7.2-3.5 12-4.6c4.7-1.1 9.9-1.6 16-1.6c4.2 0 8.6.31 13 .94c4.6.63 9.3 1.6 14 2.9c4.7 1.3 9.3 2.9 14 4.9c4.4 2 8.5 4.3 12 6.9v-47c-7.6-2.9-16-5.1-25-6.5s-19-2.1-31-2.1c-12 0-23 1.3-34 3.8s-20 6.5-28 12c-8.1 5.4-14 12-19 21c-4.7 8.4-7 18-7 30c0 15 4.3 28 13 38c8.6 11 22 19 39 27c6.9 2.8 13 5.6 19 8.3s11 5.5 15 8.4c4.3 2.9 7.7 6.1 10 9.5c2.5 3.4 3.8 7.4 3.8 12c0 3.2-.78 6.2-2.3 9s-3.9 5.2-7.1 7.2s-7.1 3.6-12 4.8c-4.7 1.1-10 1.7-17 1.7c-11 0-22-1.9-32-5.7c-11-3.8-21-9.5-28.1-15.44z" />
  </Svg>
);

const NextJSIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 24 24" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M17.813 22.502c-.089.047-.084.066.005.021a.228.228 0 0 0 .07-.047c0-.016-.002-.014-.075.026zm.178-.094c-.042.033-.042.035.009.009.028-.014.052-.03.052-.035 0-.019-.012-.014-.061.026zm.117-.071c-.042.033-.042.035.009.009.028-.014.052-.03.052-.035 0-.019-.012-.014-.061.026zm.117-.07c-.042.033-.042.035.009.009.028-.014.052-.03.052-.035 0-.019-.012-.014-.061.026zm.162-.105c-.082.052-.108.087-.035.047.052-.03.136-.094.122-.096a.466.466 0 0 0-.087.049zM11.214.006c-.052.005-.216.021-.364.033-3.408.307-6.601 2.146-8.623 4.973a11.876 11.876 0 0 0-2.118 5.243c-.096.659-.108.854-.108 1.748s.012 1.088.108 1.748c.652 4.506 3.859 8.292 8.208 9.695.779.251 1.6.422 2.533.525.364.04 1.935.04 2.299 0 1.611-.178 2.977-.577 4.323-1.264.206-.106.246-.134.218-.157a231.73 231.73 0 0 1-1.954-2.62l-1.919-2.592-2.404-3.558a332.01 332.01 0 0 0-2.421-3.556c-.009-.002-.019 1.579-.023 3.509-.007 3.38-.009 3.516-.052 3.596a.424.424 0 0 1-.206.213c-.075.038-.141.045-.495.045H7.81l-.108-.068a.442.442 0 0 1-.157-.171l-.049-.106.005-4.703.007-4.705.073-.091a.637.637 0 0 1 .174-.143c.096-.047.134-.052.54-.052.479 0 .558.019.683.155a466.83 466.83 0 0 1 2.895 4.361c1.558 2.362 3.687 5.587 4.734 7.171l1.9 2.878.096-.063a12.34 12.34 0 0 0 2.465-2.163 11.94 11.94 0 0 0 2.824-6.134c.096-.659.108-.854.108-1.748s-.012-1.088-.108-1.748c-.652-4.506-3.859-8.292-8.208-9.695a12.552 12.552 0 0 0-2.498-.523c-.225-.023-1.776-.049-1.97-.03zm4.912 7.258a.471.471 0 0 1 .237.277c.019.061.023 1.365.019 4.304l-.007 4.218-.744-1.14-.746-1.14v-3.066c0-1.982.009-3.096.023-3.15a.484.484 0 0 1 .232-.296c.096-.049.131-.054.5-.054.347 0 .408.005.486.047z" fill="#000000" />
  </Svg>
);

const AstroIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 32 32" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M5.9,18.847a7.507,7.507,0,0,0-.572,2.624,3.265,3.265,0,0,0,.551,1.553,7.427,7.427,0,0,0,2.093,1.681L13.1,28.119A7.332,7.332,0,0,0,15.2,29.287a3.239,3.239,0,0,0,1.5,0,7.381,7.381,0,0,0,2.117-1.16L24,24.711a7.512,7.512,0,0,0,2.117-1.688,3.241,3.241,0,0,0,.55-1.563,7.515,7.515,0,0,0-.587-2.643L21.547,4.551a3.973,3.973,0,0,0-.54-1.3,1.733,1.733,0,0,0-.7-.51,3.972,3.972,0,0,0-1.4-.122H13.005a3.932,3.932,0,0,0-1.4.125,1.713,1.713,0,0,0-.7.512,3.94,3.94,0,0,0-.535,1.3L5.9,18.848Zm13.24-13.2a3.329,3.329,0,0,1,.441,1.093l3.892,12.784a16.168,16.168,0,0,0-4.653-1.573L16.291,9.391a.331.331,0,0,0-.513-.169.323.323,0,0,0-.119.169l-2.5,8.557a16.14,16.14,0,0,0-4.674,1.579L12.393,6.743a3.281,3.281,0,0,1,.442-1.094,1.458,1.458,0,0,1,.582-.43,3.31,3.31,0,0,1,1.175-.1h2.793a3.314,3.314,0,0,1,1.176.1,1.454,1.454,0,0,1,.583.432ZM16.127,21.06a5.551,5.551,0,0,0,3.4-.923,2.8,2.8,0,0,1-.207,2.182A3.938,3.938,0,0,1,17.773,23.8c-.674.428-1.254.8-1.254,1.787a2.079,2.079,0,0,0,.209.914,2.49,2.49,0,0,1-1.535-2.3v-.061c0-.683,0-1.524-.962-1.524a1.028,1.028,0,0,0-.391.077,1.021,1.021,0,0,0-.552.551,1.03,1.03,0,0,0-.079.391,3.769,3.769,0,0,1-.988-2.644,4.206,4.206,0,0,1,.175-1.248c.4.757,1.92,1.32,3.731,1.32Z" fill="#ff5d01" fillRule="evenodd" />
  </Svg>
);

const TailwindIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 32 32" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M9,13.7q1.4-5.6,7-5.6c5.6,0,6.3,4.2,9.1,4.9q2.8.7,4.9-2.1-1.4,5.6-7,5.6c-5.6,0-6.3-4.2-9.1-4.9Q11.1,10.9,9,13.7ZM2,22.1q1.4-5.6,7-5.6c5.6,0,6.3,4.2,9.1,4.9q2.8.7,4.9-2.1-1.4,5.6-7,5.6c-5.6,0-6.3-4.2-9.1-4.9Q4.1,19.3,2,22.1Z" fill="#44a8b3" />
  </Svg>
);

const HTMLIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 32 32" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M6 28L4 3H28L26 28L16 31L6 28Z" fill="#E44D26" />
    <Path d="M26 5H16V29.5L24 27L26 5Z" fill="#F16529" />
    <Path d="M9.5 17.5L8.5 8H24L23.5 11H11.5L12 14.5H23L22 24L16 26L10 24L9.5 19H12.5L13 21.5L16 22.5L19 21.5L19.5 17.5H9.5Z" fill="white" />
  </Svg>
);

const CSSIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 16 16" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path fill="#1572B6" d="M4.1 11c1.4 0 1.9-1 1.9-1l-0.8-0.5c0 0-0.3 0.5-1 0.5s-1.2-0.9-1.2-2.2c0-1.2 0.6-1.8 1.2-1.8 0.5 0 0.9 0.4 0.9 0.4l0.8-0.6c0 0-0.7-0.8-1.7-0.8-1.1 0-2.2 0.9-2.2 2.8s0.9 3.2 2.1 3.2z" />
  </Svg>
);

const MongoDBIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 32 32" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M16.62,30l-.751-.249s.1-3.8-1.275-4.067c-.9-1.048.133-44.741,3.423-.149a2.712,2.712,0,0,0-1.333,1.523A14.1,14.1,0,0,0,16.62,30Z" fill="#4DB33D" />
    <Path d="M17.026,26.329a13.223,13.223,0,0,0,5-13.225C20.556,6.619,17.075,4.487,16.7,3.673a9.792,9.792,0,0,1-.825-1.6l.277,18.069S15.578,25.664,17.026,26.329Z" fill="#4DB33D" />
    <Path d="M15.487,26.569S9.366,22.4,9.72,15.025A15.54,15.54,0,0,1,15.239,3.377,1.725,1.725,0,0,0,15.846,2c.381.82.319,12.243.359,13.579C16.36,20.776,15.916,25.588,15.487,26.569Z" fill="#589636" />
  </Svg>
);

const NodeJSIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 48 48" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M42.3,11.8,25.7,2.4a4,4,0,0,0-3.4,0L5.7,11.8A3.4,3.4,0,0,0,4,14.7V33.3a3.4,3.4,0,0,0,1.7,2.9l4.4,2.5a7.2,7.2,0,0,0,3.8,1c3.1,0,4.9-1.9,4.9-5.1V16.3a.5.5,0,0,0-.5-.5H16.2a.5.5,0,0,0-.5.5V34.6c0,1.5-1.5,2.9-3.9,1.7L7.2,33.7a.5.5,0,0,1-.2-.4V14.7a.8.8,0,0,1,.2-.5L23.7,4.9h.6l16.5,9.3a.8.8,0,0,1,.2.5V33.3a.5.5,0,0,1-.2.4L24.3,43a.6.6,0,0,1-.6,0l-4.2-2.4a.3.3,0,0,0-.4,0l-2.5,1.1c-.3.1-.7.2.1.7l5.6,3.1a3.1,3.1,0,0,0,3.4,0l16.6-9.3A3.4,3.4,0,0,0,44,33.3V14.7A3.4,3.4,0,0,0,42.3,11.8Z" fill="#8CC84B" />
  </Svg>
);

const MySQLIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 25.6 25.6" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M179.076 94.886c-3.568-.1-6.336.268-8.656 1.25-.668.27-1.74.27-1.828 1.116.357.355.4.936.713 1.428.535.893 1.473 2.096 2.32 2.72l2.855 2.053c1.74 1.07 3.703 1.695 5.398 2.766.982.625 1.963 1.428 2.945 2.098.5.357.803.938 1.428 1.16v-.135c-.312-.4-.402-.98-.713-1.428l-1.34-1.293c-1.293-1.74-2.9-3.258-4.64-4.506-1.428-.982-4.55-2.32-5.13-3.97l-.088-.1c.98-.1 2.14-.447 3.078-.715 1.518-.4 2.9-.312 4.46-.713l2.143-.625v-.4c-.803-.803-1.383-1.874-2.23-2.632-2.275-1.963-4.775-3.882-7.363-5.488-1.383-.892-3.168-1.473-4.64-2.23-.537-.268-1.428-.402-1.74-.848-.805-.98-1.25-2.275-1.83-3.436l-3.658-7.763c-.803-1.74-1.295-3.48-2.275-5.086-4.596-7.585-9.594-12.18-17.268-16.687-1.65-.937-3.613-1.34-5.7-1.83l-3.346-.18c-.715-.312-1.428-1.16-2.053-1.562-2.543-1.606-9.102-5.086-10.977-.5-1.205 2.9 1.785 5.755 2.8 7.228.76 1.026 1.74 2.186 2.277 3.346.3.758.4 1.562.713 2.365.713 1.963 1.383 4.15 2.32 5.98.5.937 1.025 1.92 1.65 2.767.357.5.982.714 1.115 1.517-.625.893-.668 2.23-1.025 3.347-1.607 5.042-.982 11.288 1.293 15 .715 1.115 2.4 3.57 4.686 2.632 2.008-.803 1.56-3.346 2.14-5.577.135-.535.045-.892.312-1.25v.1l1.83 3.703c1.383 2.186 3.793 4.462 5.8 5.98 1.07.803 1.918 2.187 3.256 2.677v-.135h-.088c-.268-.4-.67-.58-1.027-.892-.803-.803-1.695-1.785-2.32-2.677-1.873-2.498-3.523-5.265-4.996-8.12-.715-1.383-1.34-2.9-1.918-4.283-.27-.536-.27-1.34-.715-1.606-.67.98-1.65 1.83-2.143 3.034-.848 1.918-.936 4.283-1.248 6.737-.18.045-.1 0-.18.1-1.426-.356-1.918-1.83-2.453-3.078-1.338-3.168-1.562-8.254-.402-11.913.312-.937 1.652-3.882 1.117-4.774-.27-.848-1.16-1.338-1.652-2.008-.58-.848-1.203-1.918-1.605-2.855-1.07-2.5-1.605-5.265-2.766-7.764-.537-1.16-1.473-2.365-2.232-3.435-.848-1.205-1.783-2.053-2.453-3.48-.223-.5-.535-1.294-.178-1.83.088-.357.268-.5.623-.58.58-.5 2.232.134 2.812.4 1.65.67 3.033 1.294 4.416 2.23.625.446 1.295 1.294 2.098 1.518h.938c1.428.312 3.033.1 4.37.5 2.365.76 4.506 1.874 6.426 3.08 5.844 3.703 10.664 8.968 13.92 15.26.535 1.026.758 1.963 1.25 3.034.938 2.187 2.098 4.417 3.033 6.56.938 2.097 1.83 4.24 3.168 5.98.67.937 3.346 1.427 4.55 1.918.893.4 2.275.76 3.08 1.25 1.516.937 3.033 2.008 4.46 3.034.713.534 2.945 1.65 3.078 2.54zm-45.5-38.772a7.09 7.09 0 0 0-1.828.223v.1h.088c.357.714.982 1.205 1.428 1.83l1.027 2.142.088-.1c.625-.446.938-1.16.938-2.23-.268-.312-.312-.625-.535-.937-.268-.446-.848-.67-1.206-1.026z" transform="matrix(.390229 0 0 .38781 -46.300037 -16.856717)" fillRule="evenodd" fill="#00678c" />
  </Svg>
);

const GitIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 24 24" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path fillRule="evenodd" clipRule="evenodd" d="M13.4142 3.82843C12.6332 3.04738 11.3668 3.04738 10.5858 3.82843L9.91421 4.5L11.482 6.06774C11.6472 6.02356 11.8208 6 12 6C13.1046 6 14 6.89543 14 8C14 8.17916 13.9764 8.35282 13.9323 8.51804L15.982 10.5677C16.1472 10.5236 16.3208 10.5 16.5 10.5C17.6046 10.5 18.5 11.3954 18.5 12.5C18.5 13.6046 17.6046 14.5 16.5 14.5C15.3954 14.5 14.5 13.6046 14.5 12.5C14.5 12.3208 14.5236 12.1472 14.5677 11.982L13 10.4142V15.2676C13.5978 15.6134 14 16.2597 14 17C14 18.1046 13.1046 19 12 19C10.8954 19 10 18.1046 10 17C10 16.2597 10.4022 15.6134 11 15.2676V9.73244C10.4022 9.38663 10 8.74028 10 8C10 7.82084 10.0236 7.64718 10.0677 7.48196L8.5 5.91421L3.82843 10.5858C3.04738 11.3668 3.04738 12.6332 3.82843 13.4142L10.5858 20.1716C11.3668 20.9526 12.6332 20.9526 13.4142 20.1716L20.1716 13.4142C20.9526 12.6332 20.9526 11.3668 20.1716 10.5858L13.4142 3.82843ZM9.17157 2.41421C10.7337 0.852115 13.2663 0.852119 14.8284 2.41422L21.5858 9.17157C23.1479 10.7337 23.1479 13.2663 21.5858 14.8284L14.8284 21.5858C13.2663 23.1479 10.7337 23.1479 9.17157 21.5858L2.41421 14.8284C0.852115 13.2663 0.852119 10.7337 2.41422 9.17157L9.17157 2.41421Z" fill="#F05032" />
  </Svg>
);

const PostgreSQLIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 25.6 25.6" style={{ marginRight: 4, marginBottom: 1 }}>
    {/* Main PostgreSQL elephant body */}
    <Path d="M18.983 18.636c.163-1.357.114-1.555 1.124-1.336l.257.023c.777.035 1.793-.125 2.4-.402 1.285-.596 2.047-1.592.78-1.33-2.89.596-3.1-.383-3.1-.383 3.053-4.53 4.33-10.28 3.227-11.687-3.004-3.84-8.205-2.024-8.292-1.976l-.028.005c-.57-.12-1.2-.19-1.93-.2-1.308-.02-2.3.343-3.054.914 0 0-9.277-3.822-8.846 4.807.092 1.836 2.63 13.9 5.66 10.25C8.29 15.987 9.36 14.86 9.36 14.86c.53.353 1.167.533 1.834.468l.052-.044a2.01 2.01 0 0 0 .021.518c-.78.872-.55 1.025-2.11 1.346-1.578.325-.65.904-.046 1.056.734.184 2.432.444 3.58-1.162l-.046.183c.306.245.285 1.76.33 2.842s.116 2.093.337 2.688.48 2.13 2.53 1.7c1.713-.367 3.023-.896 3.143-5.81" fill="#000" stroke="#000" strokeWidth="2.149"/>
    {/* Main elephant shape */}
    <Path d="M23.535 15.6c-2.89.596-3.1-.383-3.1-.383 3.053-4.53 4.33-10.28 3.228-11.687-3.004-3.84-8.205-2.023-8.292-1.976l-.028.005a10.31 10.31 0 0 0-1.929-.201c-1.308-.02-2.3.343-3.054.914 0 0-9.278-3.822-8.846 4.807.092 1.836 2.63 13.9 5.66 10.25C8.29 15.987 9.36 14.86 9.36 14.86c.53.353 1.167.533 1.834.468l.052-.044a2.02 2.02 0 0 0 .021.518c-.78.872-.55 1.025-2.11 1.346-1.578.325-.65.904-.046 1.056.734.184 2.432.444 3.58-1.162l-.046.183c.306.245.52 1.593.484 2.815s-.06 2.06.18 2.716.48 2.13 2.53 1.7c1.713-.367 2.6-1.32 2.725-2.906.088-1.128.286-.962.3-1.97l.16-.478c.183-1.53.03-2.023 1.085-1.793l.257.023c.777.035 1.794-.125 2.39-.402 1.285-.596 2.047-1.592.78-1.33z" fill="#336791"/>
    {/* Eyes */}
    <Path d="M10.322 8.145c-.017.117.215.43.516.472s.558-.202.575-.32-.215-.246-.516-.288-.56.02-.575.136z" fill="#fff"/>
    <Path d="M19.486 7.906c.016.117-.215.43-.516.472s-.56-.202-.575-.32.215-.246.516-.288.56.02.575.136z" fill="#fff"/>
  </Svg>
);

const PHPIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 512 512" style={{ marginRight: 4, marginBottom: 1 }}>
    <Rect width="512" height="512" rx="15%" fill="#777bb3" />
    <Path d="M155 202H97a3 3 0 0 0-3 2L67 345c0 3 3 3 3 3h30c3 0 3-2 3-2l7-35h27c42 0 63-28 68-53s1-56-50-56zm13 54c-4 19-17 27-35 27h-18l11-53h18c27 0 26 10 24 26z" stroke="#ffffff" strokeWidth="6" />
    <Path d="M275 311c-4 0-3-4-3-4l12-61c0-8 6-16-18-15h-18l-15 78s0 3-4 3h-29c-3 0-3-3-3-3l28-141s0-2 4-2h30c3 0 2 3 2 3l-7 34h26c36 0 45 17 42 37l-13 69s0 3-5 3z" stroke="#ffffff" strokeWidth="6" />
    <Path d="M394 202H336a3 3 0 0 0-3 2L306 345c0 3 3 3 3 3h30c3 0 3-2 3-2l7-35h27c42 0 63-28 68-53s1-56-50-56zm13 54c-4 19-17 27-35 27h-18l11-53h18c27 0 26 10 24 26z" stroke="#ffffff" strokeWidth="6" />
  </Svg>
);

const ReactNativeIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 24 24" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M12 9.861A2.139 2.139 0 1 0 12 14.139 2.139 2.139 0 1 0 12 9.861zM6.008 16.255l-.472-.12C2.018 15.246 0 13.737 0 11.996s2.018-3.25 5.536-4.139l.472-.119.133.468a23.53 23.53 0 0 0 1.363 3.578l.101.213-.101.213a23.307 23.307 0 0 0-1.363 3.578l-.133.467zM5.317 8.95c-2.674.751-4.315 1.9-4.315 3.046 0 1.145 1.641 2.294 4.315 3.046a24.95 24.95 0 0 1 1.182-3.046A24.752 24.752 0 0 1 5.317 8.95zM17.992 16.255l-.133-.469a23.357 23.357 0 0 0-1.364-3.577l-.101-.213.101-.213a23.42 23.42 0 0 0 1.364-3.578l.133-.468.473.119c3.517.889 5.535 2.398 5.535 4.14s-2.018 3.25-5.535 4.139l-.473.12zm-.491-4.259c.48 1.039.877 2.06 1.182 3.046 2.675-.752 4.315-1.901 4.315-3.046 0-1.146-1.641-2.294-4.315-3.046a24.788 24.788 0 0 1-1.182 3.046zM5.31 8.945l-.133-.467C4.188 4.992 4.488 2.494 6 1.622c1.483-.856 3.864.155 6.359 2.716l.34.349-.34.349a23.552 23.552 0 0 0-2.422 2.967l-.135.193-.235.02a23.657 23.657 0 0 0-3.785.61l-.472.119zm1.896-6.63c-.268 0-.505.058-.705.173-.994.573-1.17 2.565-.485 5.253a25.122 25.122 0 0 1 3.233-.501 24.847 24.847 0 0 1 2.052-2.544c-1.56-1.519-3.037-2.381-4.095-2.381zM16.795 22.677c-.001 0-.001 0 0 0-1.425 0-3.255-1.073-5.154-3.023l-.34-.349.34-.349a23.53 23.53 0 0 0 2.421-2.968l.135-.193.234-.02a23.63 23.63 0 0 0 3.787-.609l.472-.119.134.468c.987 3.484.688 5.983-.824 6.854a2.38 2.38 0 0 1-1.205.308zm-4.096-3.381c1.56 1.519 3.037 2.381 4.095 2.381h.001c.267 0 .505-.058.704-.173.994-.573 1.171-2.566.485-5.254a25.02 25.02 0 0 1-3.234.501 24.674 24.674 0 0 1-2.051 2.545zM18.69 8.945l-.472-.119a23.479 23.479 0 0 0-3.787-.61l-.234-.02-.135-.193a23.414 23.414 0 0 0-2.421-2.967l-.34-.349.34-.349C14.135 1.778 16.515.767 18 1.622c1.512.872 1.812 3.37.824 6.855l-.134.468zM14.75 7.24c1.142.104 2.227.273 3.234.501.686-2.688.509-4.68-.485-5.253-.988-.571-2.845.304-4.8 2.208A24.849 24.849 0 0 1 14.75 7.24zM7.206 22.677A2.38 2.38 0 0 1 6 22.369c-1.512-.871-1.812-3.369-.823-6.854l.132-.468.472.119c1.155.291 2.429.496 3.785.609l.235.02.134.193a23.596 23.596 0 0 0 2.422 2.968l.34.349-.34.349c-1.898 1.95-3.728 3.023-5.151 3.023zm-1.19-6.427c-.686 2.688-.509 4.681.485 5.254.987.563 2.843-.305 4.8-2.208a24.998 24.998 0 0 1-2.052-2.545 24.976 24.976 0 0 1-3.233-.501zM12 16.878c-.823 0-1.669-.036-2.516-.106l-.235-.02-.135-.193a30.388 30.388 0 0 1-1.35-2.122 30.354 30.354 0 0 1-1.166-2.228l-.1-.213.1-.213a30.3 30.3 0 0 1 1.166-2.228c.414-.716.869-1.43 1.35-2.122l.135-.193.235-.02a29.785 29.785 0 0 1 5.033 0l.234.02.134.193a30.006 30.006 0 0 1 2.517 4.35l.101.213-.101.213a29.6 29.6 0 0 1-2.517 4.35l-.134.193-.234.02c-.847.07-1.694.106-2.517.106zm-2.197-1.084c1.48.111 2.914.111 4.395 0a29.006 29.006 0 0 0 2.196-3.798 28.585 28.585 0 0 0-2.197-3.798 29.031 29.031 0 0 0-4.394 0 28.477 28.477 0 0 0-2.197 3.798 29.114 29.114 0 0 0 2.197 3.798z" fill="#61DAFB" />
  </Svg>
);

const JavaIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 32 32" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path d="M11.622 24.74s-1.23.748.855.962c2.51.32 3.847.267 6.625-.267a10.02 10.02 0 0 0 1.763.855c-6.25 2.672-14.16-.16-9.244-1.55zm-.8-3.473s-1.336 1.015.748 1.23c2.725.267 4.862.32 8.55-.427a3.26 3.26 0 0 0 1.282.801c-7.534 2.244-15.976.214-10.58-1.603zm14.747 6.09s.908.748-1.015 1.336c-3.58 1.07-15.014 1.39-18.22 0-1.122-.48 1.015-1.175 1.7-1.282.695-.16 1.07-.16 1.07-.16-1.23-.855-8.175 1.763-3.526 2.51 12.77 2.084 23.296-.908 19.983-2.404zM12.2 17.633s-5.824 1.39-2.084 1.87c1.603.214 4.755.16 7.694-.053 2.404-.214 4.81-.64 4.81-.64s-.855.374-1.443.748c-5.93 1.55-17.312.855-14.052-.748 2.778-1.336 5.076-1.175 5.076-1.175zm10.42 5.824c5.984-3.1 3.206-6.09 1.282-5.717-.48.107-.695.214-.695.214s.16-.32.534-.427c3.794-1.336 6.786 4.007-1.23 6.09 0 0 .053-.053.107-.16zm-9.83 8.442c5.77.374 14.587-.214 14.8-2.94 0 0-.427 1.07-4.755 1.87-4.916.908-11.007.8-14.587.214 0 0 .748.64 4.542.855z" fill="#4e7896" />
    <Path d="M18.996.001s3.313 3.366-3.152 8.442c-5.183 4.114-1.175 6.465 0 9.137-3.046-2.725-5.236-5.13-3.74-7.373C14.294 6.893 20.332 5.3 18.996.001zm-1.7 15.335c1.55 1.763-.427 3.366-.427 3.366s3.954-2.03 2.137-4.542c-1.656-2.404-2.94-3.58 4.007-7.587 0 0-10.953 2.725-5.717 8.763z" fill="#f58219" />
  </Svg>
);

const GoIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 32 32" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path fillRule="evenodd" clipRule="evenodd" d="M18.1177 14.0442C17.7408 14.1497 17.3586 14.2566 16.9162 14.3768C16.7001 14.438 16.6509 14.4519 16.4498 14.2074C16.2086 13.9194 16.0317 13.7331 15.6939 13.5636C14.6807 13.0384 13.6996 13.1909 12.7829 13.8178C11.6893 14.5632 11.1264 15.6644 11.1425 17.0367C11.1585 18.3921 12.0431 19.5103 13.3137 19.6966C14.4073 19.8491 15.324 19.4425 16.0477 18.5785C16.1924 18.3922 16.3212 18.1887 16.482 17.9516H13.378C13.0402 17.9516 12.9598 17.7314 13.0724 17.4433C13.2815 16.9181 13.6675 16.0372 13.8926 15.5967C13.9409 15.495 14.0535 15.3256 14.2947 15.3256H19.4702C19.7027 14.5496 20.0799 13.8164 20.5831 13.1226C21.7572 11.4961 23.1725 10.649 25.0863 10.2933C26.7268 9.9883 28.2707 10.1577 29.6699 11.1573C30.9405 12.0722 31.7285 13.3089 31.9376 14.9354C32.211 17.2225 31.5838 19.0862 30.0881 20.6787C29.0266 21.8138 27.7239 22.5254 26.2282 22.8473C25.9429 22.9029 25.6576 22.9293 25.3768 22.9553C25.2303 22.9689 25.085 22.9823 24.9416 22.9998C23.478 22.9659 22.1432 22.5254 21.0173 21.5089C20.2256 20.7879 19.6803 19.9019 19.4092 18.8705C19.2211 19.2707 18.9962 19.6539 18.7336 20.0185C17.5756 21.628 16.0638 22.6276 14.15 22.8987C12.5738 23.1189 11.1103 22.797 9.82366 21.7805C8.63353 20.8317 7.95805 19.578 7.78114 18.0194C7.57206 16.1727 8.08671 14.5124 9.14818 13.0554C10.2901 11.4798 11.8019 10.4802 13.6514 10.1244C15.1632 9.8364 16.6106 10.0228 17.9134 10.9546C18.7657 11.5475 19.3769 12.3608 19.779 13.3434C19.8755 13.4959 19.8111 13.5806 19.6181 13.6314C19.0545 13.7822 18.5903 13.9121 18.1177 14.0442Z" fill="#00ACD7" />
    <Path d="M2.44461 13.8517C2.41244 13.9025 2.42852 13.9364 2.49285 13.9364L7.2826 13.9534C7.33085 13.9534 7.41126 13.9025 7.44343 13.8517L7.71684 13.4112C7.749 13.3604 7.73292 13.3096 7.66859 13.3096H2.95926C2.89493 13.3096 2.81451 13.3435 2.78235 13.3943L2.44461 13.8517Z" fill="#00ACD7" />
    <Path d="M0.0160829 15.4103C-0.0160829 15.4611 7.45058e-09 15.495 0.0643316 15.495L6.63928 15.4781C6.70361 15.4781 6.76794 15.4442 6.78402 15.3764L6.91269 14.9698C6.92877 14.919 6.8966 14.8682 6.83227 14.8682H0.530735C0.466404 14.8682 0.385989 14.902 0.353823 14.9529L0.0160829 15.4103Z" fill="#00ACD7" />
    <Path d="M3.90813 16.9521C3.87596 17.0029 3.89204 17.0537 3.95638 17.0537L6.43019 17.0707C6.47843 17.0707 6.54277 17.0199 6.54277 16.9521L6.57493 16.5455C6.57493 16.4777 6.54277 16.4269 6.47843 16.4269H4.29412C4.22978 16.4269 4.16545 16.4777 4.13329 16.5285L3.90813 16.9521Z" fill="#00ACD7" />
  </Svg>
);

const RemixIcon = () => (
  <Svg width="14" height="14" viewBox="0 0 411 473" style={{ marginRight: 4, marginBottom: 1 }}>
    <Path fillRule="evenodd" clipRule="evenodd" d="M392.946 364.768C397.201 419.418 397.201 445.036 397.201 473H270.756C270.756 466.909 270.865 461.337 270.975 455.687C271.317 438.123 271.674 419.807 268.828 382.819C265.067 328.667 241.748 316.634 198.871 316.634H160.883H0V218.109H204.889C259.049 218.109 286.13 201.633 286.13 158.011C286.13 119.654 259.049 96.4098 204.889 96.4098H0V0H227.456C350.069 0 411 57.9117 411 150.42C411 219.613 368.123 264.739 310.201 272.26C359.096 282.037 387.681 309.865 392.946 364.768Z" fill="#121212" />
    <Path d="M0 473V399.553H133.697C156.029 399.553 160.878 416.116 160.878 425.994V473H0Z" fill="#121212" />
  </Svg>
);

// Function to get technology icon
const getTechIcon = (techName) => {
  const techLower = techName.toLowerCase();
  if (techLower.includes('react') && techLower.includes('native')) return <ReactNativeIcon />;
  if (techLower.includes('react') && !techLower.includes('native')) return <ReactIcon />;
  if (techLower.includes('javascript')) return <JavaScriptIcon />;
  if (techLower.includes('typescript')) return <TypeScriptIcon />;
  if (techLower.includes('next')) return <NextJSIcon />;
  if (techLower.includes('remix')) return <RemixIcon />;
  if (techLower.includes('astro')) return <AstroIcon />;
  if (techLower.includes('tailwind')) return <TailwindIcon />;
  if (techLower.includes('html')) return <HTMLIcon />;
  if (techLower.includes('css')) return <CSSIcon />;
  if (techLower.includes('mongodb')) return <MongoDBIcon />;
  if (techLower.includes('mysql')) return <MySQLIcon />;
  if (techLower.includes('postgresql')) return <PostgreSQLIcon />;
  if (techLower.includes('php')) return <PHPIcon />;
  if (techLower.includes('java')) return <JavaIcon />;
  if (techLower.includes('go')) return <GoIcon />;
  if (techLower.includes('node')) return <NodeJSIcon />;
  if (techLower.includes('git')) return <GitIcon />;
  return null;
};

// Function to get company website URL
const getCompanyWebsite = (companyName) => {
  const companyUrls = {
    "tour to valencia": "https://www.tourtovalencia.com/",
    "centro neuro expresion": "https://centroneuroexpresion.com/",
    "guillermo fernandez nutrition": "https://guillermofernandeznutricion.es/",
    "guillermo fernandez nutricion": "https://guillermofernandeznutricion.es/",
    "alqueria villacarmen": "https://alqueriavillacarmen.com/",
    "alqueria villa carmen": "https://alqueriavillacarmen.com/",
  };
  
  // Normalize the company name: lowercase, remove accents, trim spaces
  const normalizeString = (str) => {
    return str.toLowerCase()
      .normalize("NFD")
      .replace(/[\u0300-\u036f]/g, "")
      .trim();
  };
  
  const normalizedName = normalizeString(companyName);
  return companyUrls[normalizedName] || null;
};

// Create styles with safe font fallbacks
const styles = StyleSheet.create({
  page: {
    padding: 20,
    fontFamily: "Helvetica",
    backgroundColor: "#FFFFFF",
    fontSize: 10,
  },
  section: {
    marginBottom: 8,
  },
  header: {
    flexDirection: "row",
    alignItems: "flex-start",
    justifyContent: "space-between",
    marginBottom: 12,
    borderBottomWidth: 2,
    borderBottomColor: "#6366f1",
    paddingBottom: 0,
    backgroundColor: "#f8fafc",
    paddingTop: 20,
    paddingBottom: 10,
    paddingHorizontal: 15,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: "#e2e8f0",
  },
  headerContent: {
    flex: 1,
  },
  profileImage: {
    width: 90,
    height: 90,
    marginLeft: 20,
    objectFit: "contain",
  },
  name: {
    fontSize: 32,
    fontWeight: "bold",
    marginBottom: 8,
    fontFamily: "Helvetica",
    color: "#1f2937",
    letterSpacing: 0.5,
  },
  title: {
    fontSize: 16,
    color: "#6366f1",
    marginBottom: 10,
    fontWeight: "bold",
    letterSpacing: 0.3,
  },
  contactInfo: {
    fontSize: 11,
    marginBottom: 4,
    marginRight: 15,
    color: "#4b5563",
    lineHeight: 1.4,
  },
  contactRow: {
    flexDirection: "row",
    marginBottom: 0,
    flexWrap: "wrap",
    justifyContent: "space-between",
  },
  contactItem: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 4,
    flex: 1,
    marginRight: 10,
  },
  contactIcon: {
    marginRight: 6,
  },
  summaryContainer: {
    backgroundColor: "#f8fafc",
    padding: 15,
    borderRadius: 6,
    borderWidth: 1,
    borderColor: "#e2e8f0",
    marginBottom: 5,
  },
  experienceContainer: {
    backgroundColor: "#f8fafc",
    padding: 10,
    borderRadius: 6,
    borderWidth: 1,
    borderColor: "#e2e8f0",
    marginBottom: 5,
  },
  experienceCard: {
    backgroundColor: "#ffffff",
    padding: 8,
    borderRadius: 4,
    borderWidth: 1,
    borderColor: "#d1d5db",
    marginBottom: 6,
  },
  educationContainer: {
    backgroundColor: "#f8fafc",
    padding: 10,
    borderRadius: 6,
    borderWidth: 1,
    borderColor: "#e2e8f0",
    marginBottom: 5,
  },
  educationCard: {
    backgroundColor: "#ffffff",
    padding: 8,
    borderRadius: 4,
    borderWidth: 1,
    borderColor: "#d1d5db",
    marginBottom: 6,
  },
  skillsContainer: {
    backgroundColor: "#f8fafc",
    padding: 10,
    borderRadius: 6,
    borderWidth: 1,
    borderColor: "#e2e8f0",
    marginBottom: 5,
  },
  skillsCard: {
    backgroundColor: "#ffffff",
    padding: 8,
    borderRadius: 4,
    borderWidth: 1,
    borderColor: "#d1d5db",
    marginBottom: 6,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: "bold",
    marginBottom: 12,
    color: "#6366f1",
    borderBottomWidth: 1,
    borderBottomColor: "#e5e7eb",
    paddingBottom: 5,
    textTransform: "uppercase",
    letterSpacing: 0.5,
  },
  experienceItem: {
    marginBottom: 15,
  },
  bold: {
    fontWeight: "bold",
    fontFamily: "Helvetica",
  },
  row: {
    flexDirection: "row",
    marginBottom: 5,
  },
  company: {
    fontSize: 16,
    fontWeight: "bold",
    fontFamily: "Helvetica",
    marginBottom: 2,
  },
  period: {
    fontSize: 10,
    color: "#666",
    marginLeft: "auto",
  },
  periodTag: {
    backgroundColor: "#000000",
    color: "#ffffff",
    fontSize: 9,
    fontWeight: "bold",
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
    marginLeft: "auto",
  },
  position: {
    fontSize: 11,
    fontWeight: "bold",
    color: "#333",
    fontFamily: "Helvetica",
    backgroundColor: "#f9fafb",
    borderWidth: 1,
    borderColor: "#e5e7eb",
    borderRadius: 4,
    paddingHorizontal: 8,
    paddingVertical: 4,
  },
  location: {
    fontSize: 10,
    color: "#666",
    marginLeft: 0,
  },
  locationContainer: {
    flexDirection: "row",
    alignItems: "center",
  },
  locationIconSmall: {
    marginRight: 1,
    marginBottom: 1,
  },
  companyWebsiteButton: {
    backgroundColor: "#6366f1",
    color: "#ffffff",
    fontSize: 8,
    fontWeight: "bold",
    textAlign: "center",
    paddingVertical: 6,
    paddingHorizontal: 10,
    borderRadius: 6,
    marginTop: 8,
    textDecoration: "none",
  },
  companyWebsiteUrl: {
    fontSize: 8,
    color: "#6b7280",
    textAlign: "center",
    marginTop: 4,
    fontStyle: "italic",
  },
  description: {
    fontSize: 10,
    marginTop: 5,
  },
  achievement: {
    fontSize: 9,
    marginLeft: 10,
    marginTop: 2,
  },
  bulletPoint: {
    width: 3,
    height: 3,
    borderRadius: 1.5,
    backgroundColor: "#333",
    marginRight: 5,
    marginTop: 3,
  },
  skillCategory: {
    fontSize: 12,
    fontWeight: "bold",
    marginBottom: 8,
    fontFamily: "Helvetica",
  },
  languageCard: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#f9fafb",
    borderWidth: 1,
    borderColor: "#e5e7eb",
    borderRadius: 4,
    paddingHorizontal: 8,
    paddingVertical: 6,
    marginBottom: 4,
  },
  skillItem: {
    fontSize: 10,
    marginBottom: 3,
  },
  skillRow: {
    flexDirection: "row",
    flexWrap: "wrap",
    marginBottom: 10,
  },
  skill: {
    fontSize: 9,
    marginRight: 5,
    marginBottom: 5,
    backgroundColor: "#f3f4f6",
    padding: "3 6",
    borderRadius: 3,
    color: "#374151",
  },
  skillWithIcon: {
    flexDirection: "row",
    alignItems: "center",
    fontSize: 9,
    marginRight: 5,
    marginBottom: 5,
    backgroundColor: "#f3f4f6",
    padding: "3 6",
    borderRadius: 3,
    color: "#374151",
  },
  projectItem: {
    marginBottom: 15,
    padding: 10,
    backgroundColor: "#f8fafc",
    borderRadius: 5,
    borderWidth: 1,
    borderColor: "#e2e8f0",
  },
  projectTitle: {
    fontSize: 12,
    fontWeight: "bold",
    marginBottom: 3,
    color: "#1f2937",
    fontFamily: "Helvetica",
  },
  projectType: {
    fontSize: 9,
    color: "#6366f1",
    marginBottom: 5,
  },
  projectDescription: {
    fontSize: 9,
    marginBottom: 5,
    color: "#4b5563",
    lineHeight: 1.3,
  },
  projectTech: {
    fontSize: 8,
    marginRight: 4,
    marginBottom: 3,
    backgroundColor: "#6366f1",
    color: "white",
    padding: "2 4",
    borderRadius: 2,
  },
  techRow: {
    flexDirection: "row",
    flexWrap: "wrap",
    marginTop: 5,
  },
  certificationItem: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 8,
    padding: 8,
    backgroundColor: "#f9fafb",
    borderRadius: 4,
  },
  certificationContent: {
    flex: 1,
  },
  certificationName: {
    fontSize: 11,
    fontWeight: "bold",
    marginBottom: 2,
    fontFamily: "Helvetica",
  },
  certificationIssuer: {
    fontSize: 9,
    color: "#6b7280",
  },
  certificationPeriod: {
    fontSize: 9,
    color: "#6366f1",
    fontWeight: "bold",
  },
  column: {
    width: "50%",
    paddingRight: 10,
  },
  footer: {
    position: "absolute",
    bottom: 20,
    left: 20,
    right: 20,
    textAlign: "center",
    color: "#6b7280",
    fontSize: 8,
    borderTopWidth: 1,
    borderTopColor: "#e5e7eb",
    paddingTop: 8,
    backgroundColor: "#f9fafb",
    padding: "8 12",
    borderRadius: 3,
  },
});

// CV PDF Document Component
const CVPdfDocument = ({ data }) => {
  const t = getTranslationFunction();

  return (
    <Document title={`${data.personal.name} - ${data.personal.title} - CV`} author={data.personal.name} subject="Curriculum Vitae" keywords="cv, resume, curriculum, portfolio" producer="Jaime Digital Studio CV Generator" creator="Jaime Digital Studio">
      <Page size="A4" style={styles.page}>
        {/* Header Section with Personal Info */}
        <View style={styles.header}>
          <View style={styles.headerContent}>
            <Text style={styles.name}>Jaime Villanueva Alcon</Text>
            <Text style={styles.title}>{data.personal.title}</Text>
            <View style={styles.contactRow}>
              <View style={styles.contactItem}>
                <EmailIcon />
                <Text style={[styles.contactInfo, { marginLeft: 2 }]}>{data.personal.email}</Text>
              </View>
              <View style={styles.contactItem}>
                <PhoneIcon />
                <Text style={styles.contactInfo}>{data.personal.phone}</Text>
              </View>
            </View>
            <View style={styles.contactRow}>
              <View style={styles.contactItem}>
                <LocationIcon />
                <Text style={styles.contactInfo}>{data.personal.location}</Text>
              </View>
              <View style={styles.contactItem}>
                <WebsiteIcon />
                <Text style={[styles.contactInfo, { marginLeft: 2 }]}>{data.personal.website}</Text>
              </View>
            </View>
          </View>
          <Image style={styles.profileImage} src={`${window.location.origin}/profilephoto.png`} />
        </View>

        {/* Summary Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t("cv.pdf.professional_summary")}</Text>
          <View style={styles.summaryContainer}>
            <Text style={[styles.description, { textAlign: "justify", lineHeight: 1.5 }]}>
              Experienced Full-Stack Software Engineer specializing in cross-platform application development, mobile app architecture, and scalable backend solutions. Proficient in developing robust microservice architectures, implementing DevOps practices, and managing server configurations with technologies like Nginx. Strong expertise in modern frameworks, cloud deployment
              strategies, and delivering high-performance applications across web and mobile platforms. Passionate about creating efficient, maintainable code and optimizing system performance through innovative technical solutions.
            </Text>
          </View>
        </View>

        {/* Experience Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t("cv.sections.experience")}</Text>
          <View style={styles.experienceContainer}>
            {data.experience.slice(0, 2).map((exp, index) => (
              <View key={`exp-${index}`} style={styles.experienceCard}>
                <View style={styles.row}>
                  <Text style={styles.company}>{exp.company}</Text>
                  <Text style={styles.periodTag}>{exp.period}</Text>
                </View>
                <View style={styles.row}>
                  <View style={{ flexDirection: "row", alignItems: "center", flex: 1 }}>
                    <Text style={styles.position}>{exp.position}</Text>
                    <View style={[styles.locationContainer, { marginLeft: 8 }]}>
                      <LocationIconSmall />
                      <Text style={styles.location}>{exp.location}</Text>
                    </View>
                  </View>
                </View>
                <Text style={[styles.description, { lineHeight: 1.5 }]}>{exp.description}</Text>
                {exp.achievements.map((achievement, i) => (
                  <View key={`exp-${index}-ach-${i}`} style={[styles.row, { alignItems: "center" }]}>
                    <View style={styles.bulletPoint} />
                    <Text style={styles.achievement}>{achievement}</Text>
                  </View>
                ))}
                {getCompanyWebsite(exp.company) && (
                  <View style={{ alignItems: "center" }}>
                    <Link src={getCompanyWebsite(exp.company)} style={styles.companyWebsiteButton}>
                      Visit Website
                    </Link>
                    <Text style={styles.companyWebsiteUrl}>{getCompanyWebsite(exp.company)}</Text>
                  </View>
                )}
              </View>
            ))}
          </View>
        </View>
      </Page>

      {/* Second Page - Continuing Experience and Other Sections */}
      <Page size="A4" style={styles.page}>
        {/* Continuing Experience Section */}
        <View style={styles.section}>
          <View style={styles.experienceContainer}>
            {data.experience.slice(2).map((exp, index) => (
              <View key={`exp-${index + 2}`} style={styles.experienceCard}>
                <View style={styles.row}>
                  <Text style={styles.company}>{exp.company}</Text>
                  <Text style={styles.periodTag}>{exp.period}</Text>
                </View>
                <View style={styles.row}>
                  <View style={{ flexDirection: "row", alignItems: "center", flex: 1 }}>
                    <Text style={styles.position}>{exp.position}</Text>
                    <View style={[styles.locationContainer, { marginLeft: 8 }]}>
                      <LocationIconSmall />
                      <Text style={styles.location}>{exp.location}</Text>
                    </View>
                  </View>
                </View>
                <Text style={[styles.description, { lineHeight: 1.5 }]}>{exp.description}</Text>
                {exp.achievements.map((achievement, i) => (
                  <View key={`exp-${index + 2}-ach-${i}`} style={[styles.row, { alignItems: "center" }]}>
                    <View style={styles.bulletPoint} />
                    <Text style={styles.achievement}>{achievement}</Text>
                  </View>
                ))}
                {getCompanyWebsite(exp.company) && (
                  <View style={{ alignItems: "center" }}>
                    <Link src={getCompanyWebsite(exp.company)} style={styles.companyWebsiteButton}>
                      Visit Website
                    </Link>
                    <Text style={styles.companyWebsiteUrl}>{getCompanyWebsite(exp.company)}</Text>
                  </View>
                )}
              </View>
            ))}
          </View>
        </View>


      </Page>

      {/* Third Page - Education Section */}
      <Page size="A4" style={styles.page}>
        {/* Education Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t("cv.sections.education")}</Text>
          <View style={styles.educationContainer}>
            {data.education.map((edu, index) => (
              <View key={`edu-${index}`} style={styles.educationCard}>
                <View style={styles.row}>
                  <Text style={styles.company}>{edu.institution}</Text>
                  <Text style={styles.periodTag}>{edu.period}</Text>
                </View>
                <View style={styles.row}>
                  <View style={{ flexDirection: "row", alignItems: "center", flex: 1 }}>
                    <Text style={styles.position}>{edu.degree}</Text>
                    <View style={[styles.locationContainer, { marginLeft: 8 }]}>
                      <LocationIconSmall />
                      <Text style={styles.location}>{edu.location}</Text>
                    </View>
                  </View>
                </View>
                <Text style={[styles.description, { lineHeight: 1.5 }]}>{edu.description}</Text>
                {edu.achievements && edu.achievements.map((achievement, i) => (
                  <View key={`edu-${index}-ach-${i}`} style={[styles.row, { alignItems: "center" }]}>
                    <View style={styles.bulletPoint} />
                    <Text style={styles.achievement}>{achievement}</Text>
                  </View>
                ))}
              </View>
            ))}
          </View>
        </View>

        {/* Skills Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t("cv.sections.skills")}</Text>
          <View style={styles.skillsContainer}>
            {/* Technical Skills */}
            <View style={styles.skillsCard}>
              <Text style={styles.skillCategory}>{t("cv.skills_categories.technical")}</Text>
              <View style={styles.skillRow}>
                {data.skills.technical.map((skill, index) => {
                  const icon = getTechIcon(skill.name);
                  return (
                    <View key={`tech-${index}`} style={icon ? styles.skillWithIcon : styles.skill}>
                      {icon}
                      <Text style={{ fontSize: 9, color: "#374151" }}>
                        {skill.name}
                      </Text>
                    </View>
                  );
                })}
              </View>
            </View>

            <View style={styles.row}>
              {/* Languages */}
              <View style={styles.column}>
                <View style={styles.skillsCard}>
                  <Text style={styles.skillCategory}>{t("cv.skills_categories.languages")}</Text>
                  {data.skills.languages.map((lang, index) => {
                    const isEnglish = lang.name.toLowerCase().includes('english') || lang.name.toLowerCase().includes('inglés');
                    const isSpanish = lang.name.toLowerCase().includes('spanish') || lang.name.toLowerCase().includes('español');
                    
                    return (
                      <View key={`lang-${index}`} style={styles.languageCard}>
                        {isEnglish && <EnglishFlag />}
                        {isSpanish && <SpanishFlag />}
                        <Text style={styles.skillItem}>
                          {lang.name}: {lang.level}
                        </Text>
                      </View>
                    );
                  })}
                </View>
              </View>

              {/* Soft Skills */}
              <View style={styles.column}>
                <View style={styles.skillsCard}>
                  <Text style={styles.skillCategory}>{t("cv.skills_categories.soft")}</Text>
                  <View style={styles.skillRow}>
                    {data.skills.soft.map((skill, index) => (
                      <Text key={`soft-${index}`} style={styles.skill}>
                        {skill}
                      </Text>
                    ))}
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>

        {/* Projects Section */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t("cv.sections.projects")}</Text>
          {data.projects.slice(0, 4).map((project, index) => (
            <View key={`project-${index}`} style={styles.projectItem}>
              <Text style={styles.projectTitle}>{project.title}</Text>
              <Text style={styles.projectType}>{project.type || "Web Application"}</Text>
              <Text style={styles.projectDescription}>{project.description.length > 120 ? `${project.description.substring(0, 120)}...` : project.description}</Text>
              <View style={styles.techRow}>
                {project.technologies.slice(0, 8).map((tech, techIndex) => (
                  <Text key={`project-${index}-tech-${techIndex}`} style={styles.projectTech}>
                    {tech}
                  </Text>
                ))}
              </View>
            </View>
          ))}
        </View>

        {/* Certifications */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t("cv.sections.certifications")}</Text>
          {data.certifications.map((cert, index) => (
            <View key={`cert-${index}`} style={styles.certificationItem}>
              <View style={styles.certificationContent}>
                <Text style={styles.certificationName}>{cert.name}</Text>
                <Text style={styles.certificationIssuer}>{cert.issuer}</Text>
              </View>
              <Text style={styles.certificationPeriod}>{cert.timespan}</Text>
            </View>
          ))}
        </View>
      </Page>
    </Document>
  );
};

export default CVPdfDocument;
