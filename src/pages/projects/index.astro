---
import Layout from "../../layouts/Layout.astro";
import LanguageProvider from "../../components/LanguageProvider";
import ProjectsIndex from "../../components/ProjectsIndex.jsx";
import { getData } from "../../utils/projects";
import Footer from "../../components/Footer.jsx";

const data = getData();

// Extraer todas las tecnologías únicas de los proyectos
const allTechnologies = [...new Set(data.flatMap((project) => project.tech))].sort();
// Extraer todos los tipos de proyectos únicos
// const allTypes = [...new Set(data.map((project) => project.type))].sort();

// Helper function to get translated project data
const getTranslatedProjectData = (projects) => {
  // This will be handled client-side with translations
  return projects.map((project) => ({
    ...project,
    // Keep original data for fallback, translations will be applied client-side
    originalDescription: project.description,
    originalType: project.type,
  }));
};

// Crear un resumen corto para cada proyecto (primeras 120 caracteres)
const getShortDescription = (description) => {
  if (description.length <= 120) return description;
  return description.substring(0, 120) + "...";
};

const translatedData = getTranslatedProjectData(data);

// Organizar tecnologías por categorías para mejor visualización
const techCategories = {
  frontend: ["HTML", "Javascript", "Css", "Tailwind css", "Astro", "React", "Vue", "Angular"],
  backend: ["PHP", "NodeJS", "Express", "Python", "Java", "Ruby"],
  database: ["MySQL", "MongoDB", "PostgreSQL"],
  other: ["Markdown"],
};

const getTechCategory = (tech) => {
  if (techCategories.frontend.includes(tech)) return "frontend";
  if (techCategories.backend.includes(tech)) return "backend";
  if (techCategories.database.includes(tech)) return "database";
  return "other";
};

// Ya no hay categorización por proyectos destacados
// const featuredProjects = data.slice(0, 2); // Los primeros 2 proyectos como destacados
// const regularProjects = data.slice(2);
---

<Layout title="Projects | Jaime Villanueva">
  <LanguageProvider client:load>
    <ProjectsIndex projects={translatedData} allTechnologies={allTechnologies} client:load />
    <Footer client:load />
  </LanguageProvider>
</Layout>

